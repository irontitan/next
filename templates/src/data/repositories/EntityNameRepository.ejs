import { Db } from 'mongodb'
import { injectable, inject } from 'tsyringe'
import { MongodbRepository, Serialized } from '@nindoo/mongodb-data-layer'
import { I<%= entityNames.pascalCase %> } from '../../domain/<%= entityNames.kebabCase %>/structures/I<%= entityNames.pascalCase %>'
import { <%= entityNames.pascalCase %> } from '../../domain/<%= entityNames.kebabCase %>/entity'

@injectable()
export class <%= entityNames.pascalCase %>Repository extends MongodbRepository<<%= entityNames.pascalCase %>, Serialized<<%= entityNames.pascalCase %>>> {
  static collection = '<%= entityNames.plural(entityNames.kebabCase) %>'

  constructor (@inject('MongodbConnection') connection: Db) {
    super(connection.collection(<%= entityNames.pascalCase %>.collection))
  }

  // Serializes your object into JSON representation
  serialize (entity: I<%= entityNames.pascalCase %>) {
    // Example code
    // return {
    //   _id: entity.id,
    //   name: entity.name,
    //   document: entity.document,
    //   createdAt: entity.createdAt,
    //   deletedAt: entity.deletedAt,
    //   updatedAt: entity.updatedAt
    // }
  }

  // Desserializes JSON into objects
  deserialize (data: Serialized<<%= entityNames.pascalCase %>>) {
    // Example code
    // return {
    //   id: data._id,
    //   name: data.name,
    //   document: data.document,
    //   createdAt: data.createdAt,
    //   deletedAt: data.deletedAt,
    //   updatedAt: data.updatedAt
    // }
  }
}
